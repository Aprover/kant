/**
 * generated by Xtext 2.29.0
 */
package it.unimi.xtext.kant.impl;

import it.unimi.xtext.kant.AuthenticationCheck;
import it.unimi.xtext.kant.KantPackage;
import it.unimi.xtext.kant.KnowledgeValue;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Authentication Check</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unimi.xtext.kant.impl.AuthenticationCheckImpl#getPrincipal <em>Principal</em>}</li>
 *   <li>{@link it.unimi.xtext.kant.impl.AuthenticationCheckImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link it.unimi.xtext.kant.impl.AuthenticationCheckImpl#getKnowledge <em>Knowledge</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AuthenticationCheckImpl extends CheckImpl implements AuthenticationCheck
{
  /**
   * The default value of the '{@link #getPrincipal() <em>Principal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrincipal()
   * @generated
   * @ordered
   */
  protected static final String PRINCIPAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrincipal() <em>Principal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrincipal()
   * @generated
   * @ordered
   */
  protected String principal = PRINCIPAL_EDEFAULT;

  /**
   * The default value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected static final String TARGET_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected String target = TARGET_EDEFAULT;

  /**
   * The cached value of the '{@link #getKnowledge() <em>Knowledge</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKnowledge()
   * @generated
   * @ordered
   */
  protected KnowledgeValue knowledge;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AuthenticationCheckImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KantPackage.Literals.AUTHENTICATION_CHECK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPrincipal()
  {
    return principal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrincipal(String newPrincipal)
  {
    String oldPrincipal = principal;
    principal = newPrincipal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KantPackage.AUTHENTICATION_CHECK__PRINCIPAL, oldPrincipal, principal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTarget(String newTarget)
  {
    String oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KantPackage.AUTHENTICATION_CHECK__TARGET, oldTarget, target));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public KnowledgeValue getKnowledge()
  {
    return knowledge;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetKnowledge(KnowledgeValue newKnowledge, NotificationChain msgs)
  {
    KnowledgeValue oldKnowledge = knowledge;
    knowledge = newKnowledge;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KantPackage.AUTHENTICATION_CHECK__KNOWLEDGE, oldKnowledge, newKnowledge);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKnowledge(KnowledgeValue newKnowledge)
  {
    if (newKnowledge != knowledge)
    {
      NotificationChain msgs = null;
      if (knowledge != null)
        msgs = ((InternalEObject)knowledge).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KantPackage.AUTHENTICATION_CHECK__KNOWLEDGE, null, msgs);
      if (newKnowledge != null)
        msgs = ((InternalEObject)newKnowledge).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KantPackage.AUTHENTICATION_CHECK__KNOWLEDGE, null, msgs);
      msgs = basicSetKnowledge(newKnowledge, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KantPackage.AUTHENTICATION_CHECK__KNOWLEDGE, newKnowledge, newKnowledge));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KantPackage.AUTHENTICATION_CHECK__KNOWLEDGE:
        return basicSetKnowledge(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KantPackage.AUTHENTICATION_CHECK__PRINCIPAL:
        return getPrincipal();
      case KantPackage.AUTHENTICATION_CHECK__TARGET:
        return getTarget();
      case KantPackage.AUTHENTICATION_CHECK__KNOWLEDGE:
        return getKnowledge();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KantPackage.AUTHENTICATION_CHECK__PRINCIPAL:
        setPrincipal((String)newValue);
        return;
      case KantPackage.AUTHENTICATION_CHECK__TARGET:
        setTarget((String)newValue);
        return;
      case KantPackage.AUTHENTICATION_CHECK__KNOWLEDGE:
        setKnowledge((KnowledgeValue)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KantPackage.AUTHENTICATION_CHECK__PRINCIPAL:
        setPrincipal(PRINCIPAL_EDEFAULT);
        return;
      case KantPackage.AUTHENTICATION_CHECK__TARGET:
        setTarget(TARGET_EDEFAULT);
        return;
      case KantPackage.AUTHENTICATION_CHECK__KNOWLEDGE:
        setKnowledge((KnowledgeValue)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KantPackage.AUTHENTICATION_CHECK__PRINCIPAL:
        return PRINCIPAL_EDEFAULT == null ? principal != null : !PRINCIPAL_EDEFAULT.equals(principal);
      case KantPackage.AUTHENTICATION_CHECK__TARGET:
        return TARGET_EDEFAULT == null ? target != null : !TARGET_EDEFAULT.equals(target);
      case KantPackage.AUTHENTICATION_CHECK__KNOWLEDGE:
        return knowledge != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (principal: ");
    result.append(principal);
    result.append(", target: ");
    result.append(target);
    result.append(')');
    return result.toString();
  }

} //AuthenticationCheckImpl
