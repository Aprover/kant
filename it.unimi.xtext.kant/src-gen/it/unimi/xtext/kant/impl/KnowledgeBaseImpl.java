/**
 * generated by Xtext 2.29.0
 */
package it.unimi.xtext.kant.impl;

import it.unimi.xtext.kant.KantPackage;
import it.unimi.xtext.kant.Knowledge;
import it.unimi.xtext.kant.KnowledgeBase;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Knowledge Base</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unimi.xtext.kant.impl.KnowledgeBaseImpl#isShared <em>Shared</em>}</li>
 *   <li>{@link it.unimi.xtext.kant.impl.KnowledgeBaseImpl#getKnowledge <em>Knowledge</em>}</li>
 * </ul>
 *
 * @generated
 */
public class KnowledgeBaseImpl extends ElementImpl implements KnowledgeBase
{
  /**
   * The default value of the '{@link #isShared() <em>Shared</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isShared()
   * @generated
   * @ordered
   */
  protected static final boolean SHARED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isShared() <em>Shared</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isShared()
   * @generated
   * @ordered
   */
  protected boolean shared = SHARED_EDEFAULT;

  /**
   * The cached value of the '{@link #getKnowledge() <em>Knowledge</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKnowledge()
   * @generated
   * @ordered
   */
  protected Knowledge knowledge;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected KnowledgeBaseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KantPackage.Literals.KNOWLEDGE_BASE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isShared()
  {
    return shared;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShared(boolean newShared)
  {
    boolean oldShared = shared;
    shared = newShared;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KantPackage.KNOWLEDGE_BASE__SHARED, oldShared, shared));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Knowledge getKnowledge()
  {
    return knowledge;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetKnowledge(Knowledge newKnowledge, NotificationChain msgs)
  {
    Knowledge oldKnowledge = knowledge;
    knowledge = newKnowledge;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KantPackage.KNOWLEDGE_BASE__KNOWLEDGE, oldKnowledge, newKnowledge);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKnowledge(Knowledge newKnowledge)
  {
    if (newKnowledge != knowledge)
    {
      NotificationChain msgs = null;
      if (knowledge != null)
        msgs = ((InternalEObject)knowledge).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KantPackage.KNOWLEDGE_BASE__KNOWLEDGE, null, msgs);
      if (newKnowledge != null)
        msgs = ((InternalEObject)newKnowledge).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KantPackage.KNOWLEDGE_BASE__KNOWLEDGE, null, msgs);
      msgs = basicSetKnowledge(newKnowledge, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KantPackage.KNOWLEDGE_BASE__KNOWLEDGE, newKnowledge, newKnowledge));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KantPackage.KNOWLEDGE_BASE__KNOWLEDGE:
        return basicSetKnowledge(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KantPackage.KNOWLEDGE_BASE__SHARED:
        return isShared();
      case KantPackage.KNOWLEDGE_BASE__KNOWLEDGE:
        return getKnowledge();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KantPackage.KNOWLEDGE_BASE__SHARED:
        setShared((Boolean)newValue);
        return;
      case KantPackage.KNOWLEDGE_BASE__KNOWLEDGE:
        setKnowledge((Knowledge)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KantPackage.KNOWLEDGE_BASE__SHARED:
        setShared(SHARED_EDEFAULT);
        return;
      case KantPackage.KNOWLEDGE_BASE__KNOWLEDGE:
        setKnowledge((Knowledge)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KantPackage.KNOWLEDGE_BASE__SHARED:
        return shared != SHARED_EDEFAULT;
      case KantPackage.KNOWLEDGE_BASE__KNOWLEDGE:
        return knowledge != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (shared: ");
    result.append(shared);
    result.append(')');
    return result.toString();
  }

} //KnowledgeBaseImpl
