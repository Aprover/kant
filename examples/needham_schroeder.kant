principal Alice, Bob

Alice know {
    state sending_puba;

    const priva:PrivateKey;
    puba = PUB_GEN(priva);
}

Alice -> Bob : puba

Bob know {
    state waiting_puba;

    const privb: PrivateKey;
    
    pubb = PUB_GEN(privb);
}


Bob -> Alice : pubb

Alice know {
    state waiting_pubb;
    transition sending_puba=>waiting_pubb;

    fresh na: Nonce; 
    enc_na = PKE_ENC(na) with pubb;
}

Alice -> Bob : enc_na

Bob know {
    state waiting_enc_na;
    transition waiting_puba=>waiting_enc_na;

    fresh nb: Nonce;
    dec_na = PKE_DEC(enc_na) with privb;
    nb_na = CONCAT(nb, dec_na);
    enc_nb_na = PKE_ENC(nb_na) with puba;
}

Bob -> Alice : enc_nb_na

Alice know {
    state waiting_enc_na_nb;
    transition waiting_pubb => waiting_enc_na_nb;

    dec_na_nb = PKE_DEC(enc_nb_na) with priva;
    rec_na_nb = SPLIT(dec_na_nb);
    enc_nb = PKE_ENC(rec_na_nb[1]) with pubb;
}

Alice -> Bob : enc_nb

Bob know {
    state waiting_enc_nb;
    transition waiting_enc_na=>waiting_enc_nb;

    dec_nb = PKE_DEC(enc_nb) with privb;
}

check nb, dec_nb should be equal
check Bob should authenticate Alice with dec_nb
